// {{ ansible_managed }}

// Unattended-Upgrade::Origins-Pattern controls which packages are
// upgraded.
//
// Lines below have the format format is "keyword=value,...".  A
// package will be upgraded only if the values in its metadata match
// all the supplied keywords in a line.  (In other words, omitted
// keywords are wild cards.) The keywords originate from the Release
// file, but several aliases are accepted.  The accepted keywords are:
//   a,archive,suite (eg, "stable")
//   c,component     (eg, "main", "contrib", "non-free")
//   l,label         (eg, "Debian", "Debian-Security")
//   o,origin        (eg, "Debian", "Unofficial Multimedia Packages")
//   n,codename      (eg, "jessie", "jessie-updates")
//     site          (eg, "http.debian.net")
// The available values on the system are printed by the command
// "apt-cache policy", and can be debugged by running
// "unattended-upgrades -d" and looking at the log file.
//
// Within lines unattended-upgrades allows 2 macros whose values are
// derived from /etc/debian_version:
//   ${distro_id}            Installed origin.
//   ${distro_codename}      Installed codename (eg, "jessie")
Unattended-Upgrade::Origins-Pattern {
{% for pattern in apt_unattended_upgrade_origins_patterns %}
  "{{ pattern }}";
{% endfor %}
};

// List of packages to not update (regexp are supported)
Unattended-Upgrade::Package-Blacklist {
{% for package in apt_unattended_upgrade_package_blacklist %}
  "{{ package }}";
{% endfor %}
};

// This option allows you to control if on a unclean dpkg exit
// unattended-upgrades will automatically run
//   dpkg --force-confold --configure -a
// The default is true, to ensure updates keep getting installed
Unattended-Upgrade::AutoFixInterruptedDpkg "{{ apt_unattended_upgrade_auto_fix_interrupted_dpkg | string | lower }}";

// Split the upgrade into the smallest possible chunks so that
// they can be interrupted with SIGUSR1. This makes the upgrade
// a bit slower but it has the benefit that shutdown while a upgrade
// is running is possible (with a small delay)
Unattended-Upgrade::MinimalSteps "{{ apt_unattended_upgrade_minimal_steps | string | lower }}";

// Install all unattended-upgrades when the machine is shuting down
// instead of doing it in the background while the machine is running
// This will (obviously) make shutdown slower
Unattended-Upgrade::InstallOnShutdown "{{ apt_unattended_upgrade_install_on_shutdown | string | lower }}";

{% if apt_unattended_upgrade_mail | length > 0 %}
// Send email to this address for problems or packages upgrades
// If empty or unset then no email is sent, make sure that you
// have a working mail setup on your system. A package that provides
// 'mailx' must be installed. E.g. "user@example.com"
Unattended-Upgrade::Mail "{{ apt_unattended_upgrade_mail | join(',') }}";

// Set this value to "true" to get emails only on errors. Default
// is to always send a mail if Unattended-Upgrade::Mail is set
Unattended-Upgrade::MailOnlyOnError "{{ apt_unattended_upgrade_mail_only_on_error | string | lower }}";
{% endif %}

// Do automatic removal of new unused dependencies after the upgrade
// (equivalent to apt-get autoremove)
Unattended-Upgrade::Remove-Unused-Dependencies "{{ apt_unattended_upgrade_remove_unused_dependencies | string | lower }}";

Unattended-Upgrade::Remove-Unused-Kernel-Packages "{{ apt_unattended_upgrade_remove_unused_kernel_packages | string | lower }}";

// Automatically reboot *WITHOUT CONFIRMATION* if
//  the file /var/run/reboot-required is found after the upgrade
Unattended-Upgrade::Automatic-Reboot "{{ apt_unattended_upgrade_automatic_reboot | string | lower }}";

// Automatically reboot even if there are users currently logged in.
Unattended-Upgrade::Automatic-Reboot-WithUsers "{{ apt_unattended_upgrade_automatic_reboot_with_users | string | lower }}";

// If automatic reboot is enabled and needed, reboot at the specific
// time instead of immediately
//  Default: "now"
Unattended-Upgrade::Automatic-Reboot-Time "{{ apt_unattended_upgrade_automatic_reboot_time }}";

// Enable logging to syslog. Default is False
Unattended-Upgrade::SyslogEnable "{{ apt_unattended_upgrade_syslog_enable | string | lower }}";

// Specify syslog facility. Default is daemon
Unattended-Upgrade::SyslogFacility "{{ apt_unattended_upgrade_syslog_facility }}";
